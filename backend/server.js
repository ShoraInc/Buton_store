require('dotenv').config();
const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const path = require('path');

const { sequelize } = require('./models');

// –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤
const usersRoutes = require("./routes/users")
const authRoutes = require('./routes/auth');
const productRoutes = require('./routes/products');
const cartRoutes = require('./routes/cart');
const favoriteRoutes = require('./routes/favorites');
const uploadRoutes = require('./routes/upload');
const orderRoutes = require("./routes/order");
const adminRoutes = require("./routes/admin");

const app = express();
const PORT = process.env.PORT || 4000;

// Middleware
app.use(helmet());
app.use(cors({
  origin: process.env.FRONTEND_URL || 'http://localhost:3000',
  credentials: true
}));

// // Rate limiting
// const limiter = rateLimit({
//   windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
//   max: 100 // –ª–∏–º–∏—Ç –∫–∞–∂–¥–æ–≥–æ IP –¥–æ 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ windowMs
// });
// app.use('/api/', limiter);

app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
app.use('/uploads', (req, res, next) => {
  res.header('Cross-Origin-Resource-Policy', 'cross-origin');
  res.header('Cross-Origin-Embedder-Policy', 'unsafe-none');
  next();
}, express.static(path.join(__dirname, 'uploads')));

// –†–æ—É—Ç—ã API
app.use('/api/auth', authRoutes);
app.use('/api/users', usersRoutes);
app.use('/api/products', productRoutes);
app.use('/api/cart', cartRoutes);
app.use('/api/favorites', favoriteRoutes);
app.use('/api/upload', uploadRoutes);
app.use('/api/orders', orderRoutes); 
app.use('/api/admin', adminRoutes); 

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ 404
app.use('*', (req, res) => {
  res.status(404).json({ message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
  console.error(error);
  res.status(error.status || 500).json({
    message: error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
  });
});

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const startServer = async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    await sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // await sequelize.sync({ alter: true }); // force: true - –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã
    // console.log('‚úÖ –ú–æ–¥–µ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

    // –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    // await createDefaultAdmin();

    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:${PORT}/api`);
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
};

// –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const createDefaultAdmin = async () => {
  try {
    const { User } = require('./models');

    const adminExists = await User.findOne({ where: { role: 'admin' } });

    if (!adminExists) {
      await User.create({
        firstName: 'Admin',
        lastName: 'BUTON',
        email: 'admin@gmail.com',
        password: 'admin123456',
        role: 'admin'
      });
      console.log('‚úÖ –ê–¥–º–∏–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–Ω: admin@buton.kz / admin123456');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞:', error);
  }
};

startServer();

module.exports = app;